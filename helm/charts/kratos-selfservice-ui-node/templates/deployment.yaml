apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kratos-selfservice-ui-node.fullname" . }}
  {{- if .Release.Namespace }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
  labels:
{{ include "kratos-selfservice-ui-node.labels" . | indent 4 }}
    {{- with .Values.deployment.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.deployment.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kratos-selfservice-ui-node.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "kratos-selfservice-ui-node.labels" . | indent 8 }}
        {{- with .Values.deployment.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.deployment.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      automountServiceAccountToken: {{ .Values.deployment.automountServiceAccountToken }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          -
            name: KRATOS_PUBLIC_URL
            value: {{ .Values.kratosPublicUrl | quote }}
          -
            name: KRATOS_BROWSER_URL
            value: {{ .Values.kratosBrowserUrl | quote }}
          -
            name: PROJECT_NAME
            value: {{ .Values.projectName | quote }}
          -
            name: BASE_URL
            value: {{ .Values.baseUrl | quote }}
          -
            name: JWKS_URL
            value: {{ .Values.jwksUrl | quote }}
          -
            name: KRATOS_ADMIN_URL
            value: {{ .Values.kratosAdminUrl | quote }}
          -
            name: SECURITY_MODE
            value: {{ .Values.securityMode | quote }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

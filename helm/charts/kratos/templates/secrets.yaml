{{- if .Values.secret.enabled -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kratos.secretname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "kratos.labels" . | indent 4 }}
  annotations:
{{- with .Values.secret.secretAnnotations }}
  {{- toYaml . | nindent 4 }}
{{- end }}
type: Opaque
data:
  dsn: {{ include "kratos.dsn" . | b64enc | quote }}
  # Generate a random secret if the user doesn't give one. User given secret has priority
  secretsDefault: {{ ( include "kratos.secrets.default" . | default ( randAlphaNum 32 )) | required "Value kratos.config.secrets.default can not be empty!" | b64enc | quote }}
  secretsCookie: {{ ( include "kratos.secrets.cookie" . | default ( randAlphaNum 32 )) | required "Value kratos.config.secrets.cookie can not be empty!" | b64enc | quote }}
  {{- if .Values.kratos.config.courier.smtp.connection_uri }}
  smtpConnectionURI: {{ .Values.kratos.config.courier.smtp.connection_uri | b64enc | quote }}
  {{- end }}
{{- end }}

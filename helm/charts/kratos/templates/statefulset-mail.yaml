{{- if .Values.courier.enabled -}}
{{- $resources := ternary .Values.deployment.resources .Values.resources (not (empty .Values.deployment.resources )) -}}
{{- $annotations := ternary .Values.statefulSet.annotations .Values.deployment.annotations (not (empty .Values.statefulSet.annotations )) -}}
{{- $labels := ternary .Values.statefulSet.labels .Values.deployment.labels (not (empty .Values.statefulSet.labels )) -}}
{{- $extraVolumeMounts := ternary .Values.statefulSet.extraVolumeMounts .Values.deployment.extraVolumeMounts (not (empty .Values.statefulSet.extraVolumeMounts )) -}}
{{- $extraEnv := ternary .Values.statefulSet.extraEnv .Values.deployment.extraEnv (not (empty .Values.statefulSet.extraEnv )) -}}
{{- $environmentSecretsName := ternary .Values.statefulSet.environmentSecretsName .Values.deployment.environmentSecretsName (not (empty .Values.statefulSet.environmentSecretsName )) -}}
{{- $extraContainers := ternary .Values.statefulSet.extraContainers .Values.deployment.extraContainers (not (empty .Values.statefulSet.extraContainers )) -}}
{{- $extraInitContainers := ternary .Values.statefulSet.extraInitContainers .Values.deployment.extraInitContainers (not (empty .Values.statefulSet.extraInitContainers )) -}}
{{- $extraVolumes := ternary .Values.statefulSet.extraVolumes .Values.deployment.extraVolumes (not (empty .Values.statefulSet.extraVolumes )) -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kratos.fullname" . }}-courier
  {{- if .Release.Namespace }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
  labels:
    {{- include "kratos.labels" . | nindent 4 }}
    {{- with $labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with $annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kratos.fullname" . }}-courier
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "kratos.fullname" . }}-courier
  replicas: 1
  revisionHistoryLimit: {{ .Values.statefulSet.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kratos.fullname" . }}-courier
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- with $labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- include "kratos.annotations.checksum" . | indent 8 -}}
        {{- with $annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "kratos.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.statefulSet.terminationGracePeriodSeconds }}
      containers:
        - name: {{ include "kratos.fullname" . }}-courier
          image: {{ include "kratos.image" . }}
          imagePullPolicy: {{ include "kratos.imagePullPolicy" . }}
          args:
            - courier
            - watch 
            - --config
            - /etc/config/kratos.yaml
            {{- if .Values.statefulSet.extraArgs }}
              {{- toYaml .Values.statefulSet.extraArgs | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: {{ include "kratos.fullname" . }}-config-volume
              mountPath: /etc/config
              readOnly: true
            {{- if $extraVolumeMounts }}
              {{- toYaml $extraVolumeMounts | nindent 12 }}
            {{- end }}
            {{- $root := . -}}
            {{- range $method, $methodEntry := .Values.kratos.emailTemplates }}
            {{- range $result, $resultEntry := $methodEntry }}
            - name: {{ include "kratos.name" $root }}-template-{{ $method | kebabcase }}-{{ $result }}-volume
              mountPath: /conf/courier-templates/{{ $method | snakecase }}/{{ $result }}
              readOnly: true
            {{- end }}
            {{- end }}
          env:
            - name: LOG_FORMAT
              value: {{ .Values.statefulSet.log.format }}
            - name: LOG_LEVEL
              value: {{ .Values.statefulSet.log.level }}
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: dsn
            - name: SECRETS_DEFAULT
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: secretsDefault
                  optional: true
            - name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: secretsCookie
                  optional: true
            - name: SECRETS_CIPHER
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: secretsCipher
                  optional: true
            {{- if .Values.kratos.config.courier.smtp.connection_uri }}
            - name: COURIER_SMTP_CONNECTION_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: smtpConnectionURI
            {{- end }}
            {{- if $extraEnv }}
              {{- toYaml $extraEnv | nindent 12 }}
            {{- end }}
          {{- if $environmentSecretsName }}
          envFrom:
            - secretRef:
                name: {{ $environmentSecretsName }}
          {{- end}}
          resources:
              {{- toYaml $resources | nindent 12 }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
        {{- if $extraContainers }}
          {{- tpl $extraContainers . | nindent 8 }}
        {{- end }}
      {{- if $extraInitContainers }}
      initContainers:
        {{- tpl $extraInitContainers . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "kratos.fullname" . }}-config-volume
          configMap:
            name: {{ include "kratos.fullname" . }}-config
        {{- if $extraVolumes }}
          {{- toYaml $extraVolumes | nindent 8 }}
        {{- end }}
        {{- $root := . -}}
        {{- range $method, $methodEntry := .Values.kratos.emailTemplates }}
        {{- range $result, $resultEntry := $methodEntry }}
        - name: {{ include "kratos.name" $root }}-template-{{ $method | kebabcase }}-{{ $result }}-volume
          configMap:
            name: {{ include "kratos.fullname" $root }}-template-{{ $method | kebabcase }}-{{ $result }}
        {{- end }}
        {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .Values.statefulSet.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulSet.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulSet.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulSet.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulSet.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulSet.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kratos.fullname" . }}
  {{- if .Release.Namespace }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
  labels:
{{ include "kratos.labels" . | indent 4 }}
    {{- with .Values.deployment.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.deployment.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  progressDeadlineSeconds: 3600
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kratos.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "kratos.labels" . | indent 8 }}
        {{- with .Values.deployment.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.deployment.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.deployment.extraInitContainers}}
      initContainers:
        {{- if .Values.deployment.extraInitContainers }}
{{ tpl .Values.deployment.extraInitContainers . | indent 8 }}
        {{- end }}
    {{- end }}
      volumes:
        {{- if .Values.deployment.extraVolumes }}
{{ toYaml .Values.deployment.extraVolumes | indent 8 }}
        {{- end }}
        - name: {{ include "kratos.name" . }}-config-volume
          configMap:
            name: {{ include "kratos.fullname" . }}-config
        {{- $root := . -}}
        {{- range $method, $methodEntry := .Values.kratos.emailTemplates }}
        {{- range $result, $resultEntry := $methodEntry }}
        - name: {{ include "kratos.name" $root }}-template-{{ $method }}-{{ $result }}-volume
          configMap:
            name: {{ include "kratos.fullname" $root }}-template-{{ $method }}-{{ $result }}
        {{- end }}
        {{- end }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      serviceAccountName: {{ include "kratos.fullname" . }}
      containers:
        {{- if .Values.watcher.enabled }}
        - name: watcher
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.watcher.image }}
          command:
            - /bin/bash
            - -c
            - |
{{ .Files.Get "files/watch.sh" | printf "%s" | indent 14 }}
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace | quote }}
            - name: WATCH_FILE
              value: {{ .Values.watcher.mountFile | quote }}
            - name: DEPLOYMENT_SELECTOR
              value: 'app.kubernetes.io/name={{ include "kratos.name" . }}'
          volumeMounts:
          {{- with .Values.deployment.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}        
        - name: {{ .Chart.Name }}
          image: {{ include "kratos.image" . }}
          imagePullPolicy: {{ include "kratos.imagePullPolicy" . }}
          command: ["kratos"]
          args: [
            "serve",
            "all",
            {{- if .Values.kratos.development }}
            "--dev",
            {{- end}}
            "--config",
            "/etc/config/kratos.yaml"
          ]
          volumeMounts:
            {{- if .Values.deployment.extraVolumeMounts }}
{{ toYaml .Values.deployment.extraVolumeMounts | indent 12 }}
            {{- end }}
            - name: {{ include "kratos.name" . }}-config-volume
              mountPath: /etc/config
              readOnly: true
            {{- $root := . -}}
            {{- range $method, $methodEntry := .Values.kratos.emailTemplates }}
            {{- range $result, $resultEntry := $methodEntry }}
            - name: {{ include "kratos.name" $root }}-template-{{ $method }}-{{ $result }}-volume
              mountPath: /conf/courier-templates/{{ $method }}/{{ $result }}
              readOnly: true
            {{- end }}
            {{- end }}
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: dsn
            {{- if .Values.kratos.config.secrets.default }}
            - name: SECRETS_DEFAULT
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: secretsDefault
            {{- end}}
            {{- if .Values.kratos.config.secrets.cookie }}
            - name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: secretsCookie
            {{- end}}
            {{- if .Values.kratos.config.courier.smtp.connection_uri }}
            - name: COURIER_SMTP_CONNECTION_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: smtpConnectionURI
            {{- end}}
            {{- if .Values.kratos.dev_disable_api_flow_enforcement }}
            - name: DEV_DISABLE_API_FLOW_ENFORCEMENT
              value: "true"
            {{- end }}
            {{- if .Values.deployment.tracing.datadog.enabled }}
            - name: TRACING_PROVIDER
              value: datadog
            - name: DD_ENV
              value: {{ .Values.deployment.tracing.datadog.env | default "none" | quote }}
            - name: DD_VERSION
              value: {{ .Values.deployment.tracing.datadog.version | default .Values.image.tag | quote }}
            - name: DD_SERVICE
              value: {{ .Values.deployment.tracing.datadog.service | default "ory/kratos" | quote }}
            {{- if .Values.deployment.tracing.datadog.useHostIP }}
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{- end }}
            {{- end }}
            {{- if .Values.deployment.extraEnv }}
{{ toYaml .Values.deployment.extraEnv | indent 12 }}
            {{- end }}
        {{- if .Values.deployment.environmentSecretsName }}
          envFrom:
          - secretRef:
              name: {{ .Values.deployment.environmentSecretsName }}
        {{- end}}
          ports:
            - name: http-admin
              containerPort: {{ .Values.kratos.config.serve.admin.port }}
              protocol: TCP
            - name: http-public
              containerPort: {{ .Values.kratos.config.serve.public.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.deployment.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.deployment.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

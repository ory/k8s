apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kratos.fullname" . }}
  {{- if .Release.Namespace }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
  labels:
{{ include "kratos.labels" . | indent 4 }}
    {{- with .Values.deployment.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.deployment.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kratos.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "kratos.labels" . | indent 8 }}
        {{- with .Values.deployment.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.deployment.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.kratos.autoMigrate }}
      initContainers:
        -
          name: {{ .Chart.Name }}-automigrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["kratos"]
          args: ["migrate", "sql", "-e", "--yes", "--config", "/etc/config/config.yaml"]
          volumeMounts:
            -
              name: {{ include "kratos.name" . }}-config-volume
              mountPath: /etc/config
              readOnly: true
          env:
            -
              name: DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: dsn
            -
              name: SECRETS_DEFAULT
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: secretsDefault
            -
              name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: secretsCookie
          {{- if .Values.kratos.config.courier.smtp.connection_uri }}
            - 
              name: COURIER_SMTP_CONNECTION_URI
              valueFrom: 
                secretKeyRef: 
                  name: {{ include "kratos.secretname" . }}
                  key: smtpConnectionURI
          {{- end}}
    {{- end}}
      volumes:
        -
          name: {{ include "kratos.name" . }}-config-volume
          configMap:
            name: {{ include "kratos.fullname" . }}-config
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["kratos"]
          args: [
            "serve",
            "all",
            {{- if .Values.kratos.development }}
            "--dev",
            {{- end}}
            "--config",
            "/etc/config/config.yaml"
          ]
          volumeMounts:
            -
              name: {{ include "kratos.name" . }}-config-volume
              mountPath: /etc/config
              readOnly: true
          env:
            -
              name: DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: dsn
            -
              name: SECRETS_DEFAULT
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: secretsDefault
            -
              name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: {{ include "kratos.secretname" . }}
                  key: secretsCookie
            {{- if .Values.kratos.config.courier.smtp.connection_uri }}
            - 
              name: COURIER_SMTP_CONNECTION_URI
              valueFrom: 
                secretKeyRef: 
                  name: {{ include "kratos.secretname" . }}
                  key: smtpConnectionURI
          {{- end}}
          ports:
            - name: http-admin
              containerPort: {{ .Values.kratos.config.serve.admin.port }}
              protocol: TCP
            - name: http-public
              containerPort: {{ .Values.kratos.config.serve.public.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/alive
              port: http-admin
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http-admin
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

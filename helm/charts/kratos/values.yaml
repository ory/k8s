# Default values for kratos.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 30%
    maxUnavailable: 0 

image:
  repository: oryd/kratos
  tag: v0.6.3-alpha.1
  pullPolicy: IfNotPresent
# Alternative format
# image: oryd/kratos:v0.6.3-alpha.1
# imagePullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  admin:
    enabled: true
    type: ClusterIP
    port: 80
    # If you do want to specify annotations, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  public:
    enabled: true
    type: ClusterIP
    port: 80
    # If you do want to specify annotations, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

secret:
  # switch to false to prevent creating the secret
  enabled: true
  # ... and choose a different name for a secret you provide like this
  # nameOverride: "MyOtherName"
  secretAnnotations:
    # Create the secret before installation, and only then. This saves the secret from regenerating during an upgrade
    # pre-upgrade is needed to upgrade from 0.7.0 to newer. Can be deleted afterwards.
    helm.sh/hook-weight: "0"
    helm.sh/hook: "pre-install, pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/resource-policy: "keep"

ingress:
  admin:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: kratos.admin.local.com
        paths:
          - /

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  public:
    enabled: false
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      -
        host: kratos.public.local.com
        paths:
          - /

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

kratos:
  development: false
  # Enable the initialization job. Required to work with a DB
  autoMigrate: false

#  You can add multiple identity schemas here
#  identitySchemas:
#    "identity.default.schema.json": |
#      {
#        // ...
#      }
#    "identity.email.schema.json": |
#      {
#        // ...
#      }

#  You can customize the emails kratos is sending (also uncomment config.courier.template_override_path below)
#  Note: If you are setting config.courier.template_override_path you need to supply overrides for all templates.
#        It is currently not possible to overrides only selected methods.
#
#  emailTemplates:
#    recovery:
#      valid:
#        subject: Recover access to your account
#        body: |-
#          Hi, please recover access to your account by clicking the following link:
#
#          <a href="{{ .RecoveryURL }}">{{ .RecoveryURL }}</a>
#        plainBody: Hi, please recover access to your account by clicking the following link: {{ .RecoveryURL }}
#      invalid:
#        subject: Account access attempted
#        body: |-
#          Hi, you (or someone else) entered this email address when trying to recover access to an account.
#
#          However, this email address is not on our database of registered users and therefore the attempt has failed. If this was you, check if you signed up using a different address. If this was not you, please ignore this email.
#        plainBody: Hi, you (or someone else) entered this email address when trying to recover access to an account.
#    verification:
#      valid:
#        subject: Please verify your email address
#        body: |-
#          Hi, please verify your account by clicking the following link:
#
#          <a href="{{ .RecoveryURL }}">{{ .RecoveryURL }}</a>
#        plainBody: Hi, please verify your account by clicking the following link: {{ .RecoveryURL }}
#      invalid:
#        subject:
#        body:
#        plainBody:

  config:
    courier:
      smtp: {}
      #template_override_path: /conf/courier-templates

    serve:
      public:
        port: 4433
      admin:
        port: 4434

    secrets: {}

deployment:
   # Configure the probes for when the deployment is considered ready and ongoing health check
  livenessProbe:
    httpGet:
      path: /health/alive
      port: http-admin
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 5
  readinessProbe:
    httpGet:
      path: /health/ready
      port: http-admin
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 5

  extraEnv: []
  extraVolumes: []
  # - name: my-volume
  #   secret:
  #     secretName: my-secret
  extraVolumeMounts: []
  # - name: my-volume
  #   mountPath: /etc/secrets/my-secret
  #   readOnly: true
  # If you want to mount external volume
  # For example, mount a secret containing Certificate root CA to verify database
  # TLS connection.
  # extraVolumes:
  #   - name: postgresql-tls
  #     secret:
  #       secretName: postgresql-root-ca
  # extraVolumeMounts:
  #   - name: postgresql-tls
  #     mountPath: "/etc/postgresql-tls"
  #     readOnly: true

  extraInitContainers: {}
  # If you want to add extra init containers. These are processed before the migration init container.
  # extraInitContainers: |
  #  - name: ...
  #    image: ...

  # Configuration for tracing providers. Only datadog is currently supported through this block.
  # If you need to use a different tracing provider, please manually set the configuration values
  # via "kratos.config" or via "deployment.extraEnv".
  tracing:
    datadog:
      enabled: false

      # Sets the datadog DD_ENV environment variable. This value indicates the environment where kratos is running.
      # Default value: "none".
      # env: production

      # Sets the datadog DD_VERSION environment variable. This value indicates the version that kratos is running.
      # Default value: .Values.image.tag (i.e. the tag used for the docker image).
      # version: X.Y.Z

      # Sets the datadog DD_SERVICE environment variable. This value indicates the name of the service running.
      # Default value: "ory/kratos".
      # service: ory/kratos

      # Sets the datadog DD_AGENT_HOST environment variable. This value indicates the host address of the datadog agent.
      # If set to true, this configuration will automatically set DD_AGENT_HOST to the field "status.hostIP" of the pod.
      # Default value: false.
      # useHostIP: true

  resources: {}
  #  We usually recommend not to specify default resources and to leave this as a conscious
  #  choice for the user. This also increases chances charts run on environments with little
  #  resources, such as Minikube. If you do want to specify resources, uncomment the following
  #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #  memory: 128Mi

  # Node labels for pod assignment.
  nodeSelector: {}
  # If you do want to specify node labels, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #   foo: bar

  # Configure node tolerations.
  tolerations: []

  labels: {}
  #      If you do want to specify additional labels, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'labels:'.
  #      e.g.  type: app

  annotations: {}
  #      If you do want to specify annotations, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #      e.g.  sidecar.istio.io/rewriteAppHTTPProbers: "true"

  # The secret specified here will be used to load environment variables with envFrom.
  # This allows arbitrary environment variables to be provided to the application which is useful for
  # sensitive values which should not be in a configMap.
  # This secret is not created by the helm chart and must already exist in the namespace.
  # https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables
  # environmentSecretsName:

  # https://github.com/kubernetes/kubernetes/issues/57601
  automountServiceAccountToken: true

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 100
  allowPrivilegeEscalation: false
  privileged: false

# Values for initialization job
job:
  annotations: {}
  ttlSecondsAfterFinished: 60

statefulset:
  log:
    format: json
    level: trace

# Configure node affinity
affinity: {}
# Node labels for pod assignment.
nodeSelector: {}
# If you do want to specify node labels, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
#   foo: bar
# Configure node tolerations.
tolerations: []

watcher:
  enabled: false
  image: oryd/k8s-toolbox:0.0.1
  mountFile: ''
  # mountFile: /etc/secrets/my-secret/foo

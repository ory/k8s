The ORY Hive HTTP Public API is available via:
{{- if .Values.ingress.public.enabled }}
{{- range $host := .Values.ingress.public.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.public.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.public.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "hive.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  export HIVE_PUBLIC_URL=http://$NODE_IP:$NODE_PORT

If you have the ORY Hive CLI installed locally, you can run commands
against this endpoint:

  hive ... $HIVE_PUBLIC_URL

{{- else if contains "LoadBalancer" .Values.service.public.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "hive.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "hive.fullname" . }}-public -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  export HIVE_PUBLIC_URL=http://$SERVICE_IP:{{ .Values.service.public.port }}

If you have the ORY Hive CLI installed locally, you can run commands
against this endpoint:

  hive ... $HIVE_PUBLIC_URL

{{- else if contains "ClusterIP" .Values.service.public.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "hive.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:{{ .Values.service.public.port }} to use your application"
  kubectl port-forward $POD_NAME {{ .Values.service.public.port }}:{{ .Values.hive.config.serve.public.port }}
  export HIVE_PUBLIC_URL=http://127.0.0.1:{{ .Values.service.public.port }}/


If you have the ORY Hive CLI installed locally, you can run commands
against this endpoint:

  hive ... $HIVE_PUBLIC_URL

{{- end }}

The ORY Hive HTTP Admin API is available via:
{{- if .Values.ingress.admin.enabled }}
{{- range $host := .Values.ingress.admin.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.admin.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.admin.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "hive.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  export HIVE_ADMIN_URL=http://$NODE_IP:$NODE_PORT

If you have the ORY Hive CLI installed locally, you can run commands
against this endpoint:

  hive ... $HIVE_ADMIN_URL

{{- else if contains "LoadBalancer" .Values.service.admin.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "hive.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "hive.fullname" . }}-admin -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  export HIVE_ADMIN_URL=http://$SERVICE_IP:{{ .Values.service.admin.port }}

If you have the ORY Hive CLI installed locally, you can run commands
against this endpoint:

  hive ... $HIVE_ADMIN_URL

{{- else if contains "ClusterIP" .Values.service.admin.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "hive.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:{{ .Values.service.admin.port }} to use your application"
  kubectl port-forward $POD_NAME {{ .Values.service.admin.port }}:{{ .Values.hive.config.serve.admin.port }}
  export HIVE_ADMIN_URL=http://127.0.0.1:{{ .Values.service.admin.port }}/

If you have the ORY Hive CLI installed locally, you can run commands
against this endpoint:

  hive ... $HIVE_ADMIN_URL

{{- end }}
